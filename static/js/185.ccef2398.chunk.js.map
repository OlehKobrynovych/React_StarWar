{"version":3,"file":"static/js/185.ccef2398.chunk.js","mappings":"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","sources":["components/Pagination.js","components/CardPeople.js","components/Peoples.js","components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {Box, Pagination as Pagin} from '@mui/material';\r\n\r\nconst Pagination = ({page, handlePage, count}) => {\r\n    \r\n    console.log('Pagination');\r\n\r\n    return (\r\n        <Box my={2} className='pagination-wrap'>\r\n            <Pagin color=\"secondary\" count={count} page={page} onChange={(e, value)=>handlePage(value)} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Pagination);","import { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst CardPeople = ({item}) => {\r\n    // debugger\r\n    const navigate = useNavigate();\r\n\r\n    console.log('CardPeople');\r\n\r\n    const handleChange = () => {\r\n        navigate(`/people/${item.id}`)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className='CardPeople' sx={{ maxWidth: 300 }} onClick={handleChange} >\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            height=\"auto\"\r\n                            image={`https://starwars-visualguide.com/assets/img/characters/${item.id}.jpg`}\r\n                            alt=\"green iguana\"\r\n                        />\r\n                        <CardContent  >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {item.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                {item.gender}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>           \r\n        </div>\r\n    )\r\n\r\n}\r\nexport default React.memo(CardPeople);","import { Grid } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getPeoplesThunk } from \"../store/peoples_reducer\";\r\nimport CardPeople from \"./CardPeople\";\r\nimport Pagination from \"./Pagination\";\r\nimport Search from \"./Search\";\r\n\r\nconst Peoples = () => {\r\n    const dispatch = useDispatch()\r\n    const peoples = useSelector(state =>state.peoples.results)\r\n    const count = useSelector(state =>state.peoples.count)\r\n    const [page, setPage] = useState(1);\r\n    const [search, setSearch] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    console.log('Peoples');\r\n\r\n    const handleSearch = (value) => {\r\n        navigate(`/peoples/?search=${value}&page=1`)\r\n        setPage(1);\r\n        setSearch(value)\r\n    }\r\n\r\n    const handlePage = (value) => {\r\n        navigate(`/peoples/?search=${search}&page=${value}`)\r\n        setPage(value);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        let searchValue = new URLSearchParams(location.search).get('search') || '';\r\n        let pageValue = new URLSearchParams(location.search).get('page') || 1;\r\n        dispatch(getPeoplesThunk(searchValue, pageValue));\r\n\r\n        // debugger\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {    \r\n            let searchValue = new URLSearchParams(location.search).get('search') || '';\r\n            let pageValue = new URLSearchParams(location.search).get('page') || 1;\r\n            dispatch(getPeoplesThunk(searchValue, pageValue));\r\n\r\n            if (page !== pageValue) {\r\n                setPage(Number(pageValue));\r\n            }\r\n            \r\n            if (search !== searchValue) {\r\n                setSearch(searchValue);\r\n            }\r\n    }, [location]);\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <Search  search={search} handleSearch={handleSearch} />\r\n\r\n            <Pagination count={Math.ceil(count/10)} page={page} handlePage={handlePage} />\r\n\r\n            <Grid container spacing={2}>\r\n                { peoples.length ? peoples.map(el => <Grid key={el.id} item xs={12} sm={6} md={4} lg={3}>\r\n                    <CardPeople item={el} /></Grid>) : <div>Not Items</div> }\r\n            </Grid>\r\n\r\n            <Pagination count={Math.ceil(count/10)} page={page} handlePage={handlePage} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Peoples);","import InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\nconst SearchWrap = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  }));\r\n  \r\n  const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }));\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Search = ({search, handleSearch}) => {\r\n\r\n    console.log('Search');\r\n\r\n    return (\r\n      <Box   sx={{\r\n        width: 300,\r\n        '&:hover': {\r\n          backgroundColor: 'primary.main',\r\n          opacity: [0.9, 0.8, 0.7],\r\n        },\r\n      }}>\r\n        <SearchWrap  className='search-input' >\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={search}\r\n              onChange={(e)=>handleSearch(e.target.value)}\r\n              />\r\n        </SearchWrap>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Search);"],"names":["Pagination","page","handlePage","count","console","log","my","className","color","onChange","e","value","React","CardPeople","item","navigate","useNavigate","Card","sx","maxWidth","onClick","id","CardActionArea","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","variant","name","gender","Peoples","dispatch","useDispatch","peoples","useSelector","state","results","useState","setPage","search","setSearch","location","useLocation","useEffect","searchValue","URLSearchParams","get","pageValue","getPeoplesThunk","Number","Search","handleSearch","Math","ceil","Grid","container","spacing","length","map","el","xs","sm","md","lg","SearchWrap","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","opacity","placeholder","inputProps","target"],"sourceRoot":""}